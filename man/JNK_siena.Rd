% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JNK_siena.R
\name{JNK_siena}
\alias{JNK_siena}
\title{Title}
\usage{
JNK_siena(
  modelOut,
  theta1,
  theta2,
  theta3 = NULL,
  thetaInt12 = NULL,
  thetaInt13 = NULL,
  thetaInt23 = NULL,
  thetaInt123 = NULL,
  theta1vals = NULL,
  theta2vals = NULL,
  theta3vals = NULL,
  use_range_only = TRUE,
  range_size = 500,
  control_fdr = FALSE,
  alpha = 0.05,
  round_res = 3,
  sig_color = "seagreen3",
  non_sig_color = "chocolate",
  line_color = "black",
  color_mid = "white",
  color_low = "#F05039",
  color_high = "#000066",
  color_values = "grey40",
  color_grid = "black",
  grid_density = 0.01,
  grid_spacing = 0.1,
  crosshatch_non_sig = TRUE
)
}
\arguments{
\item{modelOut}{}

\item{theta1}{integer; number of the first parameter involved in the interaction}

\item{theta2}{integer; number of the second parameter involved in the interaction}

\item{theta3}{integer; number of the third parameter involved in the interaction}

\item{thetaInt12}{integer; number of the interaction between the first and second parameter}

\item{thetaInt13}{integer; number of the interaction between the first and third parameter}

\item{thetaInt23}{integer; number of the interaction between the second and third parameter}

\item{thetaInt123}{integer; number of the 3-way interaction}

\item{theta1vals}{numeric; change statistic values for the first parameter}

\item{theta2vals}{numeric; change statistic values for the second parameter}

\item{theta3vals}{numeric; change statistic values for the third parameter}

\item{range_size}{integer; number of calculated parameter combinations. Default for 2-way is 1000, default for 3-way is 50. Note that for 3-way \code{range_size^2} values will be calculated.}

\item{control_fdr}{logical; should Bonferroni-Holms correction be used}

\item{alpha}{numeric; what is the alpha-level}

\item{round_res}{integer; to which level should results be rounded}

\item{sig_color}{character; sets color for significant area in 2-way plot}

\item{non_sig_color}{character; sets color for insignificant area in 2-way plot}

\item{line_color}{character; sets color for line in 2-way plot}

\item{color_mid}{character; sets color for \code{0} value in 3-way plot}

\item{color_low}{character; sets color for negative value in 3-way plot}

\item{color_high}{character; sets color for positive values in 3-way plot}

\item{color_values}{character; sets color of moderated parameter values, only active when range_size is 7 or less}

\item{color_grid}{character; sets color of grid}

\item{grid_density}{numeric; sets density of grid}

\item{grid_spacing}{numeric; sets spacing of grid}

\item{crosshatch_non_sig}{logical; should insignificant area be hashed out? If FALSE, significant area will be hashed instead.}
}
\value{
Returns a list with tables for each of the moderated parameters and plots for each.
}
\description{
Title
}
\examples{
\dontrun{

library(RSiena)

friendship <- sienaDependent(array(
  c(s501,s502,s503),
  dim = c(50,50,3)), allowOnly = FALSE)

smoke <- varCovar(s50s[,1:2],centered = TRUE)

netDynamics <- sienaDataCreate(friendship,smoke)

first.model <- getEffects(netDynamics)
first.model <- includeEffects(first.model,
                              transTrip1)
first.model <- includeEffects(first.model,
                              egoX,altX,egoXaltX,
                              interaction1 = 'smoke')
first.model <- includeInteraction(first.model,egoX,transTrip1,
                                  interaction1 = c('smoke',''))
first.model <- includeInteraction(first.model,altX,transTrip1,
                                  interaction1 = c('smoke',''))
first.model <- includeInteraction(first.model,egoXaltX,transTrip1,
                                  interaction1 = c('smoke',''))

estimation.options <- sienaAlgorithmCreate(useStdInits = FALSE,
                                           cond = FALSE,
                                           seed = 1402, 
                                           n3 = 50000,
                                           lessMem = TRUE)

res <- siena07(estimation.options,
               data = netDynamics,
               effects = first.model,
               batch = FALSE,verbose = FALSE,
               returnDeps = TRUE,
               nbrNodes = 10,
               useCluster = TRUE)

x2 <- JNK_siena(res,
                theta1 = 6,
                theta2 = 7, 
                thetaInt12 = 8,
                theta1vals = c(-10:10), 
                theta2vals = c(-10:10))

x2$plots$`smoke alter`

x3 <- JNK_siena(res,
                theta1 = 6,
                theta2 = 7, 
                theta3 = 5, 
                thetaInt12 = 8,
                thetaInt13 = 10,
                thetaInt23 = 9,
                thetaInt123 = 11,
                theta1vals = c(-10:10), 
                theta2vals = c(-10:10), 
                theta3vals = c(0:6),
                range_size = 10)

x3$plots$`smoke alter`
}

}
